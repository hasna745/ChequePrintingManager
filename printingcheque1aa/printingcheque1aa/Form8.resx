<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3wAAAABJRU5ErkJggg==
</value>
  </data>
</root>